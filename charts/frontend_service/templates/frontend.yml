kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
  namespace: frontend
  labels:
    app: frontend
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        release: {{ .Values.release }}
    spec:
      containers:
        - name: frontend
          image: {{ .Values.frontend.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
           - containerPort: 3000
          env:
          # - name: VARIABLE_EXAMPLE
          #   valueFrom:
          #     secretKeyRef:
          #       key: token
          #       name: sUp3Rt0K3n_H3R3
          # - name: PORT
          #   value: "80"
          - name: REACT_APP_API_ENDPOINT
            value: {{ .Values.frontend.endpoint.api }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 600
            periodSeconds: 10  
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: {{ .Values.frontend.resources.limits.cpu }}
              memory: {{ .Values.frontend.resources.limits.memory }}
            requests:
              cpu: {{ .Values.frontend.resources.requests.cpu }}
              memory: {{ .Values.frontend.resources.requests.memory }}
      terminationGracePeriodSeconds: {{ .Values.termination }}

---

kind: Service
apiVersion: v1
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: frontend
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: frontend